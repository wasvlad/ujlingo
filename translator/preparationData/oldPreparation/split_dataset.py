#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
split_dataset.py

    ‚îî‚îÄ data
       ‚îú‚îÄ production
       ‚îÇ   ‚îî‚îÄ merged_ukr_dataset_old.tsv      <-- –≤—Ö—ñ–¥–Ω–∏–π –∫–æ—Ä–ø—É—Å
       ‚îî‚îÄ splits_merged_ukr_dataset       <-- —Ç—É—Ç –∑‚Äô—è–≤–ª—è—Ç—å—Å—è:
           ‚îú‚îÄ train.tsv
           ‚îú‚îÄ validation.tsv
           ‚îî‚îÄ test.tsv

"""

import csv
import os
import sys
from pathlib import Path

import pandas as pd
from sklearn.model_selection import train_test_split


PROJECT_ROOT = Path.cwd()
INPUT_FILE   = PROJECT_ROOT / "data" / "production" / "merged_ukr_dataset_old.tsv"

OUTPUT_DIR   = PROJECT_ROOT / "data" / "splits_merged_ukr_dataset"
OUTPUT_DIR.mkdir(parents=True, exist_ok=True)

# –†–æ–∑–º—ñ—Ä–∏ —Å–ø–ª—ñ—Ç—ñ–≤
TEST_RATIO = 0.10          # 10 % test
VAL_RATIO  = 0.10          # 10 % validation


def load_parallel_tsv(tsv_path: Path) -> pd.DataFrame:
    """–ß–∏—Ç–∞—î TSV-—Ñ–∞–π–ª —ñ–∑ —Ç—Ä—å–æ–º–∞ –∫–æ–ª–æ–Ω–∫–∞–º–∏ (en, uk, meta) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –ª–∏—à–µ en/uk."""
    if not tsv_path.is_file():
        sys.exit(f"‚ùå Input file not found: {tsv_path}")

    print(f"üì• Reading {tsv_path.relative_to(PROJECT_ROOT)} ‚Ä¶")
    df = pd.read_csv(
        tsv_path,
        sep="\t",
        names=["en", "uk", "meta"],       # ‚Üê –∑–Ω—ñ–º—ñ—Ç—å, —è–∫—â–æ —É —Ñ–∞–π–ª—ñ –≤–∂–µ —î header
        quoting=csv.QUOTE_NONE,
        on_bad_lines="skip",
        engine="python"                   # —Ç–µ—Ä–ø–∏–º—ñ—à–∏–π –¥–æ ¬´–∫—Ä–∏–≤–∏—Ö¬ª —Ä—è–¥–∫—ñ–≤
    )

    df = df[["en", "uk"]].dropna()
    print(f"üîé Loaded {len(df):,} sentence pairs.")
    return df


def split_dataset(df: pd.DataFrame):
    """–ü–æ–≤–µ—Ä—Ç–∞—î —Ç—Ä–∏ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∏: train, validation, test."""
    df_rest, df_test = train_test_split(
        df,
        test_size=TEST_RATIO,
        random_state=42,
        shuffle=True,
    )
    rel_val_ratio = VAL_RATIO / (1 - TEST_RATIO)
    df_train, df_val = train_test_split(
        df_rest,
        test_size=rel_val_ratio,
        random_state=42,
        shuffle=True,
    )
    return df_train, df_val, df_test


def save_split(df: pd.DataFrame, path: Path):
    """–ó–∞–ø–∏—Å—É—î –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —É TSV –∑ UTF-8 —Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–µ–º."""
    df.to_csv(path, sep="\t", index=False)
    print(f"üíæ Saved {len(df):,} lines ‚Üí {path.relative_to(PROJECT_ROOT)}")


def main():
    df = load_parallel_tsv(INPUT_FILE)

    print("‚úÇÔ∏è  Splitting into train / validation / test ‚Ä¶")
    df_train, df_val, df_test = split_dataset(df)

    save_split(df_train, OUTPUT_DIR / "train.tsv")
    save_split(df_val,   OUTPUT_DIR / "validation.tsv")
    save_split(df_test,  OUTPUT_DIR / "test.tsv")

    print("\n‚úÖ Data split completed successfully!")


if __name__ == "__main__":
    main()
